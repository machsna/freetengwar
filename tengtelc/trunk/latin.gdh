// Tengwar Telcontar - a Unicode Tengwar font
// Copyright (c) 2005-2010 Johan Winge
// 
// Tengwar Telcontar is free software: you can redistribute it and/or
// modify it under the terms of the GNU General Public License as
// published by the Free Software Foundation, either version 3 of
// the License, or (at your option) any later version.
// 
// As a special exception, if you create a document which uses this font,
// and embed this font or unaltered portions of this font into the
// document, this font does not by itself cause the resulting document
// to be covered by the GNU General Public License. This exception does
// not however invalidate any other reasons why the document might be
// covered by the GNU General Public License. If you modify this font,
// you may extend this exception to your version of the font, but you are
// not obligated to do so. If you do not wish to do so, delete this
// exception statement from your version.
// 
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
// 
// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.

table(glyph)
  c_latmayconr=(f,f_conl,g,t,     t_conl);
  c_latconr   =(f,f_conl,g,t_conr,t_conb);
  c_latmayconl=(f,     i,     dotlessi,     j,     dotlessj,     mletter,n,     p,     r,     t,     u,     v,     w,     y,     z);
  c_latconl   =(f_conl,i_conl,dotlessi_conl,j_conl,dotlessj_conl,m_conl, n_conl,p_conl,r_conl,t_conl,u_conl,v_conl,w_conl,y_conl,z_conl);

  c_lathighconr=(f,f_conl,longs,F);
  c_latmayhighconl=(b,     h,     k,     l);
  c_lathighconl   =(b_conl,h_conl,k_conl,l_conl);

  c_latmaydotligr=(f,       f_conl);
  c_latdotligr   =(f_dotlig,f_conl_dotlig);
  c_latmaydotligl=(i_conl,       j_conl);
  c_latdotligl   =(dotlessi_conl,dotlessj_conl);

  c_isoldiac=(gravecmb,acutecmb,circumflexcmb,tildecmb,macroncmb,dotaccentcmb,dieresiscmb,ringcmb,caroncmb,uni0364);
  c_diac=(gravecmb_normal,acutecmb_normal,circumflexcmb_normal,tildecmb_normal,macroncmb_normal,dotaccentcmb_normal,dieresiscmb_normal,ringcmb_normal,caroncmb_normal,uni0364_normal);
  c_diacbase=(dottedcircle,a,e,dotlessi,dotlessi_conl,dotlessj,dotlessj_conl,n,o,s,u,u_conl,y,y_conl,z,z_conl,A,E,I,N,O,S,U,Y,Z);

  c_avariant=(a,aacute,agrave,acircumflex,atilde,adieresis,aring);
  c_evariant=(e,eacute,egrave,ecircumflex,edieresis);

endtable;

table(feature)
  latconnect {
    id=101;
    name.LG_USENG = string("Connect Latin");
    default = true;
  }
  roundr {
    id=102;
    name.LG_USENG = string("Round r");
    default = no;
    settings {
      no { value=0; name.LG_USENG = string("Never"); }
      onlyo { value=1; name.LG_USENG = string("After o only"); }
      round { value=2; name.LG_USENG = string("After b, o, p"); }
      all { value=3; name.LG_USENG = string("Always"); }
    }
  }
endtable;

table(sub)
  pass(2)
    c_isoldiac > c_diac / c_diacbase _ ;
    if (roundr==onlyo)
      r > r_round / o _ ;
    elseif (roundr==round)
      r > r_round / (b,o,p) _ ;
    elseif (roundr==all)
      r > r_round ;
    endif;

    if (latconnect)
      c_latmayconr c_latmayconl > c_latconr c_latconl / _ ^ _ ;
    endif;
    c_latmayhighconl > c_lathighconl / c_lathighconr _ ;
  endpass;
  pass(3)
    c_latmaydotligr c_latmaydotligl > c_latdotligr c_latdotligl / _ _ ;
  endpass;
endtable;

table(pos)
  pass(1)
    c_diacbase (c_diac,dieresiscmb_narrow) { attach{ to=@1; at=uap; with=dap }; insert=false;} / _ ^ _;
  endpass;
  pass(2)
    c_avariant v  {kern.x = -110m} / _ c_diac? ^ _;
    c_avariant w  {kern.x = -110m} / _ c_diac? ^ _;
    (v,v_conl) c_avariant {kern.x = -100m} / _ ^ _;
    (w,w_conl) c_avariant {kern.x = -100m} / _ ^ _;
    (r,r_conl) c_avariant {kern.x = -60m} / _ ^ _;
    T c_evariant {kern.x = -160m} / _ ^ _;
    (quoteleft,quotedblleft) (a,c,d,e,g,o,q,s) {kern.x = -100m} / _ ^ _;
    (quoteright,quotedblright) (a,c,d,e,g,o,q,s) {kern.x = -200m} / _ ^ _;
    (a) (quoteright,quotedblright)  {kern.x = -50m} / _ ^ _;
    (f,f_conl) (quoteright,quotedblright) {kern.x = +450m} / _ ^ _;
  endpass;
endtable;

