%% Tengwar Telcontar - a Tengwar unicode typeface.
%% Copyright (C) 2005-2009 Johan Winge
%% 
%% Tengwar Telcontar is free software; you can redistribute it and/or
%% modify it under the terms of the GNU General Public License as
%% published by the Free Software Foundation; either version 2 of the
%% License, or (at your option) any later version.
%% 
%% As a special exception, if you create a document which uses this
%% font, and embed this font or unaltered portions of this font into
%% the document, this font does not by itself cause the resulting
%% document to be covered by the GNU General Public License. This
%% exception does not however invalidate any other reasons why the
%% document might be covered by the GNU General Public License. If you
%% modify this font, you may extend this exception to your version of
%% the font, but you are not obligated to do so. If you do not wish to
%% do so, delete this exception statement from your version.
%% 
%% Tengwar Telcontar is distributed in the hope that it will be useful,
%% but WITHOUT ANY WARRANTY; without even the implied warranty of
%% MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
%% GNU General Public License for more details.
%% 
%% You should have received a copy of the GNU General Public License
%% along with Tengwar Telcontar; if not, write to the Free Software
%% Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA

forgd:=false; % We have this character in the latin font too.
addalias("uni25CC","dottedcircle");
beginchr(dottedcircle,1.1tex);
  padding(0.3pt,0.3pt);
  numeric le;
  le=tex/19.5; path dot;
  dot=superellipse((le,0),(0,le),(-le,0),(0,-le),0.76);
  for i=0 upto 15:
    fill dot shifted (1/2(w,tex)+((9.2le,0) rotated (22.5*i)));
  endfor
  setap("uap",(1/2w,tex+apy));
  setap("dap",(1/2w,-apy));
endchr;
forgd:=true;

addalias("uni200B","zwsp"); beginrefchr(zwsp,0); endchr;
addalias("uni200C","zwnj"); %beginrefchr(zwnj,0); endchr;
addalias("uni200C.hidden","zwnj_hidden"); beginrefchr(zwnj_hidden,0); endchr;
addalias("uni200D","zwj"); %beginrefchr(zwj,0); endchr;
addalias("uni200D.hidden","zwj_hidden"); beginrefchr(zwj_hidden,0); endchr;
%addalias("uni200D.visible","zwj_visible");
beginchr(zwnj,0);
  numeric le;
  le:=em/30;
  pickup pensquare xscaled 1le yscaled 0.5le;
  bot y1=0; x1=x2=0;
  y2=tasc+1pt;
  draw z1--z2; 
endchr;
beginchr(zwj,0);
  numeric le;
  le:=em/30;
  pickup pensquare xscaled 1le yscaled 0.5le;
  bot y1=0; x1=x2=0;
  y2=tasc+1pt;
  draw z1--z2; 
  pickup pensquare scaled 1le rotated 45;
  z2=1/2[z3,z6]=1/2[z5,z4];
  x3=x5; y3=y4;
  x4-x3=y3-y5=1pt;
  show z3,z4,z5,z6;
  draw z3--z6; draw z4--z5;
endchr;

% Move to stdteng when you're done...
vardef find_telcoap(expr yoffset, pena, side, telcop, telcoap) =
  save t,y,finaly,ap,lastt; pair ap; finaly:=if pair yoffset: ypart fi yoffset;
  y:=finaly;
  t:=telcop heighttimes y;
  forever:
    draw_change_of_angle:=false;
    ap:=change_angle(point t of telcop, penangle t of telcoap+side, pena+side);
    y:=y+(finaly-ypart(ap));
    lastt:=t; t:=telcop heighttimes y;
    if t=-1: t:= if lastt<0.5: 0 else: length telcop fi; fi
    exitif abs(t-lastt) <= epsilon;
  endfor
  (xpart ap,finaly)
enddef;

input tengenc;

def draw_prefeanoreanqu(expr style) =

  padding(0.2pt,if style=descend: 0.8pt else: 0.7pt fi);
  a2-2=a3+5=a4+5=a5+5=35;
  use(a2); z3=rt(0,0);
  use(a3); z4=rt(0,0);
  z1=(w-rpad,0.3tex);
  if style=descend:
     x1-x2=0.5*xpart(z4-z3);
     y2=-tdesc;
  elseif style=curved:
     z2=(0.3[x11,x1],-tdesc);
  fi

  a10=a11+2=a12+3=a13+10=a14-5=35;
  use(a10); top z10=(if style=descend: 0.55 else: 0.5 fi [x11,x1],tex+o);
  z11=(x13+0.65pt,0.50tex);
  use(a12); bot z12=(0.27[x11,x1],0);
  use(a13); bot z13=(lpad,0);

  if style=descend:
     ap1=ang(a12..a11..a10..a2..a3..a4..a5..a3);
     p1=z12..z11{up}..z10{right}..z1{down}..botfootserif(1,2)(0.5pt,0.1pt,1.0pt,40,ap1);
  elseif style=curved:
     ap1=ang(a12..a11..a10..a2..a3);
     p1=z12..z11{up}..z10{right}..z1{down}..{-dir a3}z2;
  fi

  use(a14); bot z14=find_telcoap(0,a14,180,subpath(2,infinity) of p1,subpath(2,infinity) of ap1);

  ap2=ang(a13..a12..a14);
  p2=z13..z12..z14;

  draw_stroke(p1,ap1);
  draw_stroke(p2,ap2);

  setap("uap",(x10,tex+apy));
  setap("dap",(0.4[x11,x1],-apy));

enddef;
  
beginchr(prefeanoreanqu,1.25en);
   draw_prefeanoreanqu(descend);
endchr;
pause;
beginchr(prefeanoreanqu_var,1.25en);
   draw_prefeanoreanqu(curved);
endchr;
pause;

if tracing:
input stdteng;
fi
input addteng;

beginchr(startmodechange,1.0en);
  a1=a2=a3=a4=35;
  x2-x1=1.15pt;
  1/2[x1,x2]=1/2w;
  x3=x1; x4=x2;
  use(a1); top y1=top y2=tasc;
  y1-y3=y2-y4=0.8tex;
  p1=z1..z3;
  p2=z2..z4;
  draw_stroke(p1,ang(a1..a3));
  draw_stroke(p2,ang(a2..a4));
endchr;
beginrefchr(endmodechange,1.05en);
  setap("ap",(0,-tasc+1/4tex));
  attach(startmodechange,"ap","origo");
endchr;
beginchr(bilboexclam,2en);
  padding(1.0pt,1.0pt);
  z1=(1/2w,1/2tex);
  draw_diamond(1)(1.2);
  
  a2=35; a3=40; a4=40; a5=52; a6=37;
  z3=(lpad,y1);
  z4=(x1,tasc-1.3pt);
  z5=(w-rpad,y1);

%  p1=z4..botserif(4,3)(0.9pt,0.3*abs(z4-z3),-60,3,ang(a3..a2));
  p1=z4..botserif(4,3)(0.9pt,0.3*abs(z4-z3),-60,9,ang(a3..a2));
%  p2=z4..botserif(4,5)(0.4pt,0.2*abs(z4-z5),a3+180,0,ang(a5..a6));
  p2=z4..botserif(4,5)(0.9pt,0.3*abs(z4-z5),a3+180,-3,ang(a5..a6));

  draw_stroke(p1,ang(a4..a3..a2));
  draw_stroke(p2,ang(a4..a5..a6));
endchr;
pause;

