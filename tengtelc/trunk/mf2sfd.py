#!/usr/bin/python3

## Tengwar Telcontar - a Unicode Tengwar font
## Copyright (c) 2005-2022 Johan Winge
## 
## Tengwar Telcontar is free software: you can redistribute it and/or
## modify it under the terms of the GNU General Public License as
## published by the Free Software Foundation, either version 3 of
## the License, or (at your option) any later version.
## 
## As a special exception, if you create a document which uses this font,
## and embed this font or unaltered portions of this font into the
## document, this font does not by itself cause the resulting document
## to be covered by the GNU General Public License. This exception does
## not however invalidate any other reasons why the document might be
## covered by the GNU General Public License. If you modify this font,
## you may extend this exception to your version of the font, but you are
## not obligated to do so. If you do not wish to do so, delete this
## exception statement from your version.
## 
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.   See the
## GNU General Public License for more details.
## 
## You should have received a copy of the GNU General Public License
## along with this program.  If not, see <http://www.gnu.org/licenses/>.

import sys
import re
import os

fn = sys.argv[1]
weight = sys.argv[2] if len(sys.argv) == 3 else ""

print("Running MetaFont.")
os.system('mf "\\mode:=pixpt; mag:=300;{} input {}.mf"'.format(
   f' weight:={weight};' if weight else '', fn))

print("Generating enc, pe and gdh file.")
charnames = ['.notdef'] * 256
pe = []
gdh = ['// NOTE: This file is automatically generated. Do not edit!', '']
with open(fn + '.log', 'r') as logfile:
   for logline in logfile:
      logline = logline.strip()
      match = re.match(r'ec: ([A-Za-z_][A-Za-z0-9._]*) \[(\d{1,4})\]', logline)
      if match:
         charname = match.group(1)
         charcode = int(match.group(2))
         if charcode < 256:
            charnames[charcode] = charname
         else:
            charnames.append(charname)
      match = re.match('pe: (.*)', logline)
      if match:
         pe.append(match.group(1))
      match = re.match('gd: (.*)', logline)
      if match:
         gdh.append(match.group(1))
      match = re.match(r'Output written on (\S*)', logline)
      if match:
         gf = match.group(1)
with open(fn + '.pe', 'w') as pefile:
   pefile.write('\r\n'.join(pe))
with open(f'{fn}{weight}.gdh', 'w') as gdhfile:
   gdhfile.write('\r\n'.join(gdh))
with open(fn + '.enc', 'w') as encfile:
   encfile.write(f'/{fn} [ \n')
   for charname in charnames:
      encfile.write(f'/{charname}\n')
   encfile.write('] def\n')

os.system(f'gftopk {gf} {fn}.pk')
os.system(f'fontforge -script {fn}.pe')
