%% Tengwar Telcontar - a Unicode Tengwar font
%% Copyright (c) 2005-2010 Johan Winge
%% 
%% Tengwar Telcontar is free software: you can redistribute it and/or
%% modify it under the terms of the GNU General Public License as
%% published by the Free Software Foundation, either version 3 of
%% the License, or (at your option) any later version.
%% 
%% As a special exception, if you create a document which uses this font,
%% and embed this font or unaltered portions of this font into the
%% document, this font does not by itself cause the resulting document
%% to be covered by the GNU General Public License. This exception does
%% not however invalidate any other reasons why the document might be
%% covered by the GNU General Public License. If you modify this font,
%% you may extend this exception to your version of the font, but you are
%% not obligated to do so. If you do not wish to do so, delete this
%% exception statement from your version.
%% 
%% This program is distributed in the hope that it will be useful,
%% but WITHOUT ANY WARRANTY; without even the implied warranty of
%% MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
%% GNU General Public License for more details.
%% 
%% You should have received a copy of the GNU General Public License
%% along with this program.  If not, see <http://www.gnu.org/licenses/>.

numeric luuvbardiff[];

def draw_telco(expr side, type, conn, sectype) =
  lp:= if (side=carrier): 1.3pt elseif (side=leftside) and ((type=short) or (type=descend)): 1.2pt else: 1.0pt fi; %  and (conn=normal)
%  rp:= if ((side=rightside) and ((type=descend) or (type=short))): 0.9pt else: if (side=carrier): 1.1pt else: 1.0pt fi fi;
  rp:= if (side=rightside): 0.9pt else: if (side=carrier): 1.1pt else: 1.0pt fi fi;
  padding(lp,rp);

  if (side=leftside) or (side=carrier):
     if (conn=conleft) or (conn=conboth):
       a1=conpenangle7+1; a2=1/2[a1,a3];
     else:
       a1-3=a2+1=35;
     fi
     if type=ascend:
       a3+8=a4+10=a5+10=35;
     elseif type=descend:
       a3+5=a4+5=a5+5=35;
     elseif type=short:
       a3+5=a4+8=a5+10=35;
     elseif type=extended:
       a3+5=a4+5=a5+5=35;
     fi
  elseif side=rightside:
     if type=ascend:
       a1-6=a2-1=a3+2=35;
       if conn=conright: a4-2=conpenangle11; else: a4=38; fi
     elseif (type=descend) or (type=short):
       if (conn=conright) or (sectype=closed):
         a0+7=a1+8=35;
       else:
         a0+15=a1+8=35;
       fi
       if type=descend:
         a2-2=a3+5=a4+5=a5+5=35;
       elseif type=short:
         a2+4=a3+1=35;
         if conn=conrbot: a4-2=conpenangle11; else: a4=38; fi
       fi
     elseif type=extended:
       a1-3=a2+1=a3+5=a4+5=a5+5=35;
     fi

  fi

%%  Due to the varying width of the stem, they often seem to lean backwards.
%%  I'm not sure this is what I want... This corrects it anyhow:
%  if ((side=rightside) and ((type=descend) or (type=short))):
    use(a2); z10=rt(0,0);
    use(a3); z11=rt(0,0);
    x1+x2=lpad+w-rpad;
    x1-x2=0.5*xpart(z11-z10);
%  else:
%    x1=x2=1/2(lpad+w-rpad);
%  fi

  y1=if (type=short) or (type=descend): tex else: tasc fi;
  y2=if (type=short) or (type=ascend): if side=rightside: 0 else: -o fi else: -tdesc fi;

  if side=leftside:
    ap1=ang(a1..a2..a3..a4..a5..a3);
    if conn=normal:
      if type=descend:
        p1=topserif(1,2)(0.7pt, 0.5tex, 25, 0, ap1)..botfootserif(1,2)(0.5pt,0.1pt,0.8pt,40,ap1);
      elseif type=ascend:
        p1=topserif(1,2)(0.6pt, 0.5tex, 25, 0, ap1)..botfootserif(1,2)(0.5pt,0.03pt,0.6pt,25,ap1);
      elseif type=short:
        p1=topserif(1,2)(0.7pt, 0.4tex, 25, 0, ap1)..botfootserif(1,2)(0.5pt,0.03pt,0.6pt,25,ap1);
      elseif type=extended:
        p1=topserif(1,2)(0.6pt, 0.5tex, 25, 0, ap1)..botfootserif(1,2)(0.5pt,0.1pt,0.8pt,40,ap1);
      fi
    elseif conn=conleft:
      if type=descend:
        p1=topserif(1,2)(0.6pt, 0.5tex, 0, 0, ap1)..botfootserif(1,2)(0.5pt,0.1pt,0.8pt,40,ap1);
      elseif type=short:
        p1=topserif(1,2)(0.6pt, 0.4tex, 0, 0, ap1)..botfootserif(1,2)(0.5pt,0.03pt,0.6pt,25,ap1);
      fi
    fi
  elseif side=rightside:
    if conn=normal:
      if type=ascend:
        ap1=ang(a1..a2..a3..a4);
        p1=topserif(1,2)(0.6pt, 0.5tex, 25, 0, ap1)..botserif(1,2)(0.50pt, 0.5tex, 180+25, 0, ap1);
      elseif type=descend:
        ap1=ang(a2..a0..a1..a2..a3..a4..a5..a3);
        p1=topfootserif(1,2)(0.5pt,0.05pt,if sectype=closed: 0.2pt,18 else: 0.4pt,12 fi,ap1)..botfootserif(1,2)(0.5pt,0.1pt,1.0pt,40,ap1);
      elseif type=short:
        ap1=ang(a2..a0..a1..a2..a3..a4);
        p1=topfootserif(1,2)(0.5pt,0.05pt,if sectype=closed: 0.2pt,18 else: 0.4pt,12 fi,ap1)..botserif(1,2)(0.50pt, 0.4tex, 180+25, 0, ap1);
      elseif type=extended:
        ap1=ang(a1..a2..a3..a4..a5..a3);
        p1=topserif(1,2)(0.6pt, 0.5tex, 25, 0, ap1)..botfootserif(1,2)(0.5pt,0.1pt,1.0pt,40,ap1);
      fi
    elseif conn=conright:
      if type=ascend:
        ap1=ang(a1..a2..a3..a4);
        p1=topserif(1,2)(0.6pt, 0.5tex, 25, 0, ap1)..botserif(1,2)(0.30pt, 0.5tex, 180, 0, ap1);
      elseif type=descend:
        ap1=ang(a2..a0..a1..a2..a3..a4..a5..a3);
        p1=topfootserif(1,2)(0.5pt,0.05pt,0.2pt,18,ap1)..botfootserif(1,2)(0.5pt,0.1pt,1.0pt,40,ap1);
      elseif type=short:
        ap1=ang(a2..a0..a1..a2..a3..a4);
        p1=topfootserif(1,2)(0.5pt,0.05pt,0.2pt,18,ap1)..botserif(1,2)(0.50pt, 0.4tex, 180+25, 0, ap1);
      fi
    elseif conn=conrbot:
      if type=short:
        ap1=ang(a2..a0..a1..a2..a3..a4);
        p1=topfootserif(1,2)(0.5pt,0.05pt,0.4pt,12,ap1)..botserif(1,2)(0.30pt, 0.3tex, 180, 0, ap1);
      fi
    fi
  elseif side=carrier:
    if (type=ascend) and (conn=conright):
      ap1=ang(a1..a2..a3..a4);
    else:
      ap1=ang(a1..a2..a3..a4..a5..a3);
    fi
    if conn=normal:
      if type=descend:
        p1=topserif(1,2)(0.6pt, 0.5tex, 25, 0, ap1)..botfootserif(1,2)(0.5pt,0.1pt,1.0pt,40,ap1);
      elseif type=ascend: % Halla
        p1=topserif(1,2)(0.6pt, 0.5tex, 25, 0, ap1)..botfootserif(1,2)(0.5pt,0.03pt,0.5pt,25,ap1);
      elseif type=short:
        p1=topserif(1,2)(0.6pt, 0.4tex, 25, 0, ap1)..botfootserif(1,2)(0.5pt,0.03pt,0.5pt,25,ap1);
      elseif type=extended:
        p1=topserif(1,2)(0.6pt, 0.5tex, 25, 0, ap1)..botfootserif(1,2)(0.5pt,0.1pt,0.8pt,40,ap1);
      fi
    elseif conn=conleft:
      if type=descend:
        p1=topserif(1,2)(0.6pt, 0.5tex, 0, 0, ap1)..botfootserif(1,2)(0.5pt,0.1pt,0.8pt,40,ap1);
      elseif type=short:
        p1=topserif(1,2)(0.6pt, 0.4tex, 0, 0, ap1)..botfootserif(1,2)(0.5pt,0.03pt,0.5pt,25,ap1);
      fi
    elseif conn=conright:
      if type=ascend: % Halla
%        p1=topserif(1,2)(0.6pt, 0.5tex, 25, 0, ap1)..botserif(1,2)(0.50pt, 0.3tex, 20, 0, ap1);
      elseif type=short:
        p1=topserif(1,2)(0.6pt, 0.4tex, 25, 0, ap1)..botfootserif(1,2)(0.5pt,0.03pt,0.5pt,25,ap1);
      fi
    elseif conn=conboth:
      if type=short:
        p1=topserif(1,2)(0.6pt, 0.4tex, 0, 0, ap1)..botfootserif(1,2)(0.5pt,0.03pt,0.5pt,25,ap1);
      fi
    fi
  fi

  if (conn=conleft) or (conn=conboth):
    z21=point 0 of p1; a21=penangle 0 of ap1;
    draw_connection(7,21,true);
  fi

  if (conn=conright) or (conn=conboth) or (conn=conrbot):
    if (type=descend) or (type=short) and (side=rightside) and ((conn=conright) or (conn=conboth)):
      draw_stroke(p1, ap1);
      z20=point 1 of p1; a20=penangle 1 of ap1;
      draw_connection(7,20,false);
    elseif (conn=conrbot) or (conn=conright) and (type=ascend):
      draw_stroke(p1, ap1);
      z20=point infinity of p1; a20=penangle infinity of ap1;
      draw_connection(11,20,false);
    else: % Carrier
      draw_stroke(subpath(0,2) of p1, subpath(0,2) of ap1);
      draw_stroke(subpath(4,5) of p1, subpath(4,5) of ap1);
      z20=point 4 of p1; a20=penangle 4 of ap1;
      draw_connection(11,20,false);
    fi
  else:
    draw_stroke(p1, ap1);
  fi

  z3=find_telcoap(conpoint3,conpenangle3,180,p1,ap1);
  z4=find_telcoap(conpoint4,conpenangle4,0,p1,ap1);
  setap("lluuvap",z3);
  setap("lbarap",z4);
  z5=find_telcoap(conpoint5,conpenangle5,0,p1,ap1);
  if (side=rightside) and ((type=descend) or (type=short)):
    z6=(x1,ypart conpoint6);
  else:
    z6=find_telcoap(conpoint6,conpenangle6,180,p1,ap1);
  fi
  setap("rluuvap",z5);
  setap("rbarap",z6);
enddef;

forgd:=false;

beginchr("telco_leftdown",0);
  draw_telco(leftside, descend, normal, normal);
  luuvbardiff1:=xpart(z3-z4);
endchr;
beginchr("telco_leftdown_conl",0);
  draw_telco(leftside, descend, conleft, normal);
endchr;
beginchr("telco_leftup",0);
  draw_telco(leftside, ascend, normal, normal);
  luuvbardiff2:=xpart(z3-z4);
endchr;
beginchr("telco_leftshort",0);
  draw_telco(leftside, short, normal, normal);
  luuvbardiff2:=luuvbardiff2+xpart(z3-z4);
endchr;
beginchr("telco_leftshort_conl",0);
  draw_telco(leftside, short, conleft, normal);
endchr;
beginchr("telco_leftext",0);
  draw_telco(leftside, extended, normal, normal);
endchr;

forgd:=true;
beginchr(longcarr,0);
  draw_telco(carrier, descend, normal, normal);
  setap("uap",(0.5[x1b,x1a],tex+apy));
  setap("dap",(0.75[x2c,x2b],-tdesc-apy));
endchr;
beginchr(longcarr&".conl",0);
  draw_telco(carrier, descend, conleft, normal);
  setap("uap",(0.5[x1b,x1a],tex+apy));
  setap("dap",(0.75[x2c,x2b],-tdesc-apy));
endchr;

beginchr(halla,0);
  draw_telco(carrier, ascend, normal, normal);
  setap("uap",(0.5[x1b,x1a],tasc+apy));
  setap("dap",(0.75[x2c,x2b],-apy));
endchr;

beginchr(shortcarr,0);
  draw_telco(carrier, short, normal, normal);
  setap("uap",(0.5[x1b,x1a],tex+apy));
  setap("dap",(0.75[x2c,x2b],-apy));
endchr;
beginchr(shortcarr&".conl",0);
  draw_telco(carrier, short, conleft, normal);
  setap("uap",(0.5[x1b,x1a],tex+apy));
  setap("dap",(0.75[x2c,x2b],-apy));
endchr;
beginchr(shortcarr&".conr",0);
  draw_telco(carrier, short, conright, normal);
  setap("uap",(0.5[x1b,x1a],tex+apy));
  setap("dap",(0.75[x2c,x2b],-apy));
endchr;
pause;
beginchr(shortcarr&".conb",0);
  draw_telco(carrier, short, conboth, normal);
  setap("uap",(0.5[x1b,x1a],tex+apy));
  setap("dap",(0.75[x2c,x2b],-apy));
endchr;
pause;
%beginchr(extendedtelco,0);
%  draw_telco(carrier, extended, normal, normal);
%  setap("uap",(0.5[x1b,x1a],tasc+apy));
%  setap("dap",(0.75[x2c,x2b],-tdesc-apy));
%endchr;

forgd:=false;

beginchr("telco_rightdown",0);
  draw_telco(rightside, descend, normal, normal);
  luuvbardiff3:=xpart(z5-z6);
endchr;
beginchr("telco_rightdown2",0);
  draw_telco(rightside, descend, normal, closed);
  setap("quesseligap",point 6 of p1); apt(ps.n,lastap).forgd:=false;
  quesseligappenangle:=penangle 6 of ap1;
endchr;
beginchr("telco_rightdown_conr",0);
  draw_telco(rightside, descend, conright, normal);
endchr;
beginchr("telco_rightup",0);
  draw_telco(rightside, ascend, normal, normal);
  luuvbardiff4:=xpart(z5-z6);
  setap("harmaligap",point 0 of p1); apt(ps.n,lastap).forgd:=false;
  harmaligappenangle:=penangle 0 of ap1;
endchr;
pause;
beginchr("telco_rightup_conr",0);
  draw_telco(rightside, ascend, conright, normal);
endchr;
pause;
beginchr("telco_rightshort",0);
  draw_telco(rightside, short, normal, normal);
%  luuvbardiff3:=luuvbardiff3+xpart(z5-z6);
endchr;
beginchr("telco_rightshort2",0);
  draw_telco(rightside, short, normal, closed);
endchr;
pause;
beginchr("telco_rightshort_conr",0);
  draw_telco(rightside, short, conright, normal);
endchr;
pause;
beginchr("telco_rightshort_conrbot",0);
  draw_telco(rightside, short, conrbot, normal);
endchr;
beginchr("telco_rightshort2_conrbot",0);
  draw_telco(rightside, short, conrbot, closed);
endchr;
pause;
beginchr("telco_rightext",0);
  draw_telco(rightside, extended, normal, normal);
endchr;


def draw_declefttelco(expr sy,eya,eyb,h) =
  padding(1.0pt,2.0pt);
  z1=(lpad,sy); z2=(x1,eya);
  ap1=ornang(rounded,curved) shifted (0,5);
  p1=ornpath(rounded,curved)(1,2);
  a3=a4=a5+1=42; a6=penangle infinity of ap1; a7=a6;
  x3=0.2[x1,x4]; z3=z4-whatever*dir(a4-5);
  use(a4); top z4=z1+(1.2tecil_w,0);
  use(a5); bot z5=(x4,eyb);
  z7=z2c+h*dir(angle(z2-z5)+5);
  ap2=ang(a3..a4..a5..a6..a7);
  p2=z3..{dir a4}z4 & z4..z5 & z5..tension1.15..z2c..z7;
  draw_stroke(p1,ap1);
  draw_stroke(p2,ap2);
  z10=find_telcoap(conpoint8,conpenangle8,180,p2,ap2);
  z11=find_telcoap(conpoint4,conpenangle4,0,p2,ap2);
  setap("lluuvap",z10);
  setap("lbarap",z11);
  penlabels(range 1 thru 8);
enddef;

beginchr("captelco_leftdown",0);
  draw_declefttelco(ctex,-ctdesc,-ctdesc+1.0pt,0.8pt);
endchr;
beginchr("captelco_leftup",0);
  draw_declefttelco(ctasc,o-1.0pt,+o,0.4pt);
endchr;
beginchr("captelco_leftshort",0);
  draw_declefttelco(ctex,o-1.0pt,+o,0.4pt);
endchr;
beginchr("captelco_leftup2",0);
  draw_declefttelco(ctasc,-0.65pt,0,0.8pt);
endchr;
beginchr("captelco_leftshort2",0);
  draw_declefttelco(ctex,-0.65pt,0,0.8pt);
endchr;
beginchr("captelco_leftext",0);
  draw_declefttelco(ctasc,-ctdesc,-ctdesc+1.0pt,0.8pt);
endchr;

def draw_decrighttelco(expr style, secstyle) =
  padding(1.0pt,2.0pt);
  x1=lpad; x2=x1; x4=x1+1.2tecil_w; x5=x4;
  a3=a4=42;
  if style=ascend:
    y1=ctasc; y2=0;
    ap1=ornang(rounded,narrcon) shifted (0,5);
    p1=ornpath(rounded,narrcon)(1,2);
    x3=0.2[x1,x4]; z3=z4-whatever*dir(a4-5);
    use(a4); top y4=y1;
    y5=y2;
    ap2=ornang(noorn,narrcon) shifted (0,5);
    p2=ornpath(noorn,narrcon)(4,5);
    ap3=ang(a3..a4..ap2);
    p3=z3..{dir a4}z4 & p2;
    x8=x2c+0.8tecil_w; z8=z2c+whatever*dir45;
    use(penangle infinity of ap1); draw z2c..z8;
    z11=find_telcoap(conpoint10,conpenangle10,180,p1,ap1);
  elseif style=short:
    a1=41; use(a1);
    if secstyle=1:
      z1=z4-whatever*dir40; y4=ctex+3o;
    elseif secstyle=2:
      top y1=y4-o; y4=ctex;
    fi
    y2=y5=0;
    ap0=ornang(noorn,narrcon) shifted (0,5); ap1=ang(a1..ap0);
    p1=ornpath(noorn,narrcon)(1,2);  
    ap3=ornang(curved,narrcon) shifted (0,5);
    p3=ornpath(curved,narrcon)(4,5);
    %ap3=ang(a4..ap2);
    x8=x2c+0.8tecil_w; z8=z2c+whatever*dir45;
    use(penangle infinity of ap1); draw z2c..z8;
    if secstyle=1:draw_stroke(z1..z4c,ang(penangle 0 of ap1..penangle 0 of ap3)); fi
    z11=find_telcoap(conpoint10,conpenangle10,180,p3,ap3);
  elseif style=descend:
    a1=41; use(a1);
    if secstyle=1:
      z1=z4-whatever*dir40; y4=ctex+3o;
    elseif secstyle=2:
      top y1=y4; y4=ctex-o;
    fi
    y2=-ctdesc;
    ap0=ornang(noorn,curved) shifted (0,5); ap1=ang(a1..ap0);
    p1=ornpath(noorn,curved)(1,2);
    a5=a4-1; a6=penangle infinity of ap1; a7=a6;
    use(a5); bot y5=-ctdesc+1pt;
    z7=z2c+0.8pt*dir(angle(z2-z5)+5);
    ap2=ornang(curved,noorn) shifted (0,5);
    p2=ornpath(curved,noorn)(4,5);
    ap3=ang(ap2..a5..a6..a7);
    p3=p2 & z5..tension1.15..z2c..z7;
    if secstyle=1:draw_stroke(z1..z4c,ang(penangle 0 of ap1..penangle 0 of ap2)); fi
    z11=find_telcoap(conpoint10,conpenangle10,180,p2,ap2);
  elseif style=extended:
    y1=ctasc; y2=-ctdesc;
    ap1=ornang(rounded,curved) shifted (0,5);
    p1=ornpath(rounded,curved)(1,2);
    x3=0.2[x1,x4]; z3=z4-whatever*dir(a4-5);
    use(a4); top y4=y1;
    a5=a4-1; a6=penangle infinity of ap1; a7=a6;
    use(a5); bot y5=-ctdesc+1pt;
    z7=z2c+0.8pt*dir(angle(z2-z5)+5);
    ap3=ang(a3..a4..a5..a6..a7);
    p3=z3..{dir a4}z4 & z4--z5 & z5..tension1.15..z2c..z7;
    z11=find_telcoap(conpoint10,conpenangle10,180,p1,ap1);
  fi
  draw_stroke(p3,ap3);
  draw_stroke(p1,ap1);
  z10=find_telcoap(conpoint9,conpenangle9,0,p1,ap1);
  setap("rluuvap",z10);
  setap("rbarap",z11);
  penlabels(range 1 thru 8);
enddef;

beginchr("captelco_rightdown1",0);
  draw_decrighttelco(descend,1);
endchr;
beginchr("captelco_rightdown2",0);
  draw_decrighttelco(descend,2);
endchr;
beginchr("captelco_rightup",0);
  draw_decrighttelco(ascend,0);
endchr;
beginchr("captelco_rightshort1",0);
  draw_decrighttelco(short,1);
endchr;
beginchr("captelco_rightshort2",0);
  draw_decrighttelco(short,2);
endchr;
beginchr("captelco_rightext",0);
  draw_decrighttelco(extended,0);
endchr;

% Create means. (Change denominator if needed!)
% A kludge, yes, I know.
luuvbardiff1:=luuvbardiff1/1;
luuvbardiff2:=luuvbardiff2/2;
luuvbardiff3:=luuvbardiff3/2;
luuvbardiff4:=luuvbardiff4/1;


def draw_lowclosingbar(expr style) =
  padding(0.5pt,0.3pt);
  a1=conpenangle4;
  use(a1); bot z1=(lpad,0); z10=top z1;
  if style=normal:
    a2=a1+6; a3=a2-6;
    use(a2); x2=x3-0.8pt; y2=0.8[bot y10,top 0];
    x3=w-rpad; z3=z2+whatever*dir(0.7a3);
    p1=z1{dir5}..z2{right}...z3{dir a3}; ap1=ang(a1--a2--a3);
  elseif style=conright:
    a2=a1+6; a3=conpenangle11;
    use(a2); x2=x3-0.8pt; y2=0.8[bot y10,top 0];
    use (a3); rt z3=(w,0)+conpoint11;
    p1=z1{dir5}..z2..z3{right}; ap1=ang(a1--a2--a3);
    draw_connection(11,3,false);
  elseif style=descend:
    a2=a3=a4=a5=a1+6;
    use(a2); x2=x3-1.5pt; y2=0.8[bot y10,top 0];
    z3=(w-rpad-0.35pt,0.42[y2,y4]);
    z4=(1.1[x3,x2],-0.6tdesc);
    z5=z4+0.9pt*dir(180-30);
    p1=z1{dir5}..z2{dir-3}..z3{down}..z4{left}..z5; ap1=ang(a1..a2..a3..a4..a5);
  fi
  draw_stroke(p1,ap1);
  setap("lbarap",z1);
  penlabels(range 1 thru 5);
enddef;

def draw_highclosingbar(expr style,h,yap) =
  padding(0.8pt,0.3pt); % Rpad is relevant for style=normal and conleft. Lpad for normal, truncated, conright.
  if (style=normal) or (style=truncated) or (style=conright):
    a1-5=a2-4=35;
    z1=(lpad,y2+0.4pt);
    use(a2); top z2=(x1+0.2pt,h);
  else:
    a1=conpenangle7; a2=a1;
    use(a1); lft z1=conpoint7;
    draw_connection(7,1,true);
    z2=z1+(1pt,0pt);
  fi
  if (style=conright) or (style=conboth):
    a4=conpenangle7; use(a4); rt z4=(w,0)+conpoint7;
    draw_connection(7,4,false);
  else:
    a4=35; x4=w-rpad; z4=z3+whatever*dir15;
  fi
  z10=(w-rpad-0.6pt,yap); 
  if (style=truncated) or (style=conlefttrunc):
    a3=conpenangle6; z3=z10;
  else:
    a3=35; z3=change_angle(z10,conpenangle6+180,a3+180);
  fi
  if (style=truncated) or (style=conlefttrunc):
    ap1=ang(a1..a2..a3);
  else:
    ap1=ang(a1..a2..a3..a4);
  fi
  if (style=conleft) or (style=conlefttrunc) or (style=conboth):
    p1=z1{right}..z2;
  else:
    p1=z1..z2{dir-2};
  fi
  if (style=normal) or (style=conleft):
    p2=z3{dir2}..z4;
  elseif (style=truncated) or (style=conlefttrunc):
    p2=z3;
  elseif (style=conright) or (style=conboth):
    p2=z3..z4{right};
  fi
  draw_stroke(p1..p2,ap1);
  setap("rbarap",z10);
  penlabels(range 1 thru 4);
enddef;

beginchr("closingbar_low1",1.2ten+luuvbardiff1);
  draw_lowclosingbar(normal);
endchr;
beginchr("closingbar_low1_conr",1.2ten+luuvbardiff1);
  draw_lowclosingbar(conright);
endchr;
beginchr("closingbar_low2",1.2ten+luuvbardiff2);
  draw_lowclosingbar(normal);
endchr;
beginchr("closingbar_low2_conr",1.2ten+luuvbardiff2);
  draw_lowclosingbar(conright);
endchr;
beginchr("closingbar_low2_desc",1.2ten+luuvbardiff2);
  draw_lowclosingbar(descend);
endchr;
beginchr("closingbar_low3",2.0ten+luuvbardiff1);
  draw_lowclosingbar(normal);
endchr;
beginchr("closingbar_low3_conr",2.0ten+luuvbardiff1);
  draw_lowclosingbar(conright);
endchr;
beginchr("closingbar_low4",2.0ten+luuvbardiff2);
  draw_lowclosingbar(normal);
endchr;
beginchr("closingbar_low4_conr",2.0ten+luuvbardiff2);
  draw_lowclosingbar(conright);
endchr;
beginchr("closingbar_low4_desc",2.0ten+luuvbardiff2);
  draw_lowclosingbar(descend);
endchr;

beginchr("capclosingbar_low1",1.22ten+luuvbardiff1);
  draw_lowclosingbar(normal);
endchr;
beginchr("capclosingbar_low2",1.1ten+luuvbardiff2);
  draw_lowclosingbar(normal);
endchr;
beginchr("capclosingbar_low3",2.06ten+luuvbardiff1);
  draw_lowclosingbar(normal);
endchr;
beginchr("capclosingbar_low4",1.95ten+luuvbardiff2);
  draw_lowclosingbar(normal);
endchr;

beginchr("closingbar_high1",1.3ten+luuvbardiff3);
  draw_highclosingbar(truncated,tex,ypart conpoint6);
endchr;
beginchr("closingbar_high1_conl",1.3ten+luuvbardiff3);
  draw_highclosingbar(conlefttrunc,tex,ypart conpoint6);
endchr;
beginchr("closingbar_high2",1.3ten+luuvbardiff4);
  draw_highclosingbar(normal,tex,ypart conpoint6);
endchr;
beginchr("closingbar_high2_conr",1.3ten+luuvbardiff4);
  draw_highclosingbar(conright,tex,ypart conpoint6);
endchr;
beginchr("closingbar_high2_conl",1.3ten+luuvbardiff4);
  draw_highclosingbar(conleft,tex,ypart conpoint6);
endchr;
beginchr("closingbar_high2_conb",1.3ten+luuvbardiff4);
  draw_highclosingbar(conboth,tex,ypart conpoint6);
endchr;
beginchr("closingbar_high3",2.1ten+luuvbardiff3);
  draw_highclosingbar(truncated,tex,ypart conpoint6);
endchr;
beginchr("closingbar_high3_conl",2.1ten+luuvbardiff3);
  draw_highclosingbar(conlefttrunc,tex,ypart conpoint6);
endchr;
beginchr("closingbar_high4",2.1ten+luuvbardiff4);
  draw_highclosingbar(normal,tex,ypart conpoint6);
endchr;
beginchr("closingbar_high4_conr",2.1ten+luuvbardiff4);
  draw_highclosingbar(conright,tex,ypart conpoint6);
endchr;
beginchr("closingbar_high4_conl",2.1ten+luuvbardiff4);
  draw_highclosingbar(conleft,tex,ypart conpoint6);
endchr;
beginchr("closingbar_high4_conb",2.1ten+luuvbardiff4);
  draw_highclosingbar(conboth,tex,ypart conpoint6);
endchr;

beginchr("capclosingbar_high1",1.26cten);
  draw_highclosingbar(truncated,ctex,ypart conpoint10);
endchr;
beginchr("capclosingbar_high2",1.66cten+1.5*(tecil_w-0.93pt));
  draw_highclosingbar(normal,ctex,ypart conpoint10);
endchr;
beginchr("capclosingbar_high3",2.06cten);
  draw_highclosingbar(truncated,ctex,ypart conpoint10);
endchr;
beginchr("capclosingbar_high4",2.46cten+1.5*(tecil_w-0.93pt));
  draw_highclosingbar(normal,ctex,ypart conpoint10);
endchr;

def draw_luuva(expr num, side, style, h, yap) =
  padding(0.7pt,0.7pt);
  transform rot; rot=identity if side=rightside: rotatedaround ((1/2[lpad,w-rpad],1/2h),180) fi;
  numeric apshift;
  a1=conpenangle3; a2=a3=a4=a5=35;
  z1=if side=leftside: (lpad,yap) else: (w-rpad,yap) transformed rot fi;
  use(a2); top z2=(0.63[x1,x3],h);
  use(a4); bot z4=(if (style=open) or (style=conright) and (num=2): 0.3 elseif (style=conright): 0.1 else: 0.0 fi [x5,x3],0);
  x5=1.5[x3,x2]; z5=z4+whatever*dir(180-if side=leftside: 38 else: 30 fi);
  if num=1:
    apshift=0.3pt;
    z3=(w-rpad,0.57h);
  elseif num=2:
    apshift=0.1pt;
    z3=(if style=closed: 0.53 else: 0.52 fi[x1,x8],0.57h);
    use(a2); top z7=(x8-(x3-x2),h);
    z8=(w-rpad,0.55h);
    use(a4); bot z9=(if style=open: 0.3 else: 0.0 fi [x10,x8],0);
    x10=1.5[x8,x7]; z10=z9+whatever*dir(180-if side=leftside: 38 else: 30 fi);
  fi
  if (style=open) or (style=conright) and (num=2):
    ap1=ang(a1..a2..a3..a4..a5);
    p1=z1{curl0.3}..z2{right}..tension1.1..z3{down}..tension1.1..z4{left}..tension1.1..z5;
    draw_stroke(p1 transformed rot,ap1);
  elseif style=conright:
    ap1=ang(a1..a2..a3..a4);
    p1=z1{curl0.3}..z2{right}..tension1.1..z3{down}..tension1.2..z4{left};
    t:=3; %directiontime -dir40 of p1;
    draw_stroke(subpath(0,t) of p1 transformed rot,subpath(0,t) of ap1);
    z11=point t of p1; a11=penangle t of ap1;
  elseif style=closed:
    ap1=ang(a1..a2..a3..a4);
    p1=z1{curl0.3}..z2{right}..tension1.1..z3{down}..tension1.2..z4{left};
    t:=2.7; %directiontime -dir40 of p1;
    draw_stroke(subpath(0,t) of p1 transformed rot,subpath(0,t) of ap1);
  fi
  if num=2:
    z6=find_telcoap(0.6h,conpenangle3,180,subpath(1,3) of p1,subpath(1,3) of ap1);
    if style=open:
      p2=z6{curl0.3}..z7{right}..tension1.1..z8{down}..tension1.1..z9{left}..tension1.1..z10;
      draw_stroke(p2 transformed rot,ap1);
    elseif style=conright:
      p2=z6{curl0.3}..z7{right}..tension1.1..z8{down}..tension1.2..z9{left};
      t:=3; %directiontime -dir40 of p2;
      draw_stroke(subpath(0,t) of p2 transformed rot, subpath(0,t) of ap1);
      z11=point t of p2; a11=penangle t of ap1;
    elseif style=closed:
      p2=z6{curl0.3}..z7{right}..tension1.1..z8{down}..tension1.2..z9{left};
      t:=2.7; %directiontime -dir40 of p2;
      draw_stroke(subpath(0,t) of p2 transformed rot, subpath(0,t) of ap1);
    fi
  fi
  if style=conright:
    draw_connection(11,11)(false);
  fi
  if side=leftside:
    setap("lluuvap",z1 transformed rot);
    setap("luuvaluap",(0.5w,h+apy)); apt(ps.n,lastap).forgd:=false;
    setap("luuvaruap",(0.5w+apshift,h+apy)); apt(ps.n,lastap).forgd:=false;
    setap("luuvaldap",(0.5w-0.25pt,-apy)); apt(ps.n,lastap).forgd:=false;
    setap("luuvardap",(0.5w-0.10pt+apshift,-apy)); apt(ps.n,lastap).forgd:=false;
  elseif side=rightside:
    setap("rluuvap",z1 transformed rot);
    setap("luuvaluap",(0.5w+0.10pt-apshift,h+apy)); apt(ps.n,lastap).forgd:=false;
    setap("luuvaruap",(0.5w+0.25pt,h+apy)); apt(ps.n,lastap).forgd:=false;
    setap("luuvaldap",(0.5w-apshift,-apy)); apt(ps.n,lastap).forgd:=false;
    setap("luuvardap",(0.5w,-apy)); apt(ps.n,lastap).forgd:=false;
  fi
  setap("cap",(0.5w,1/2tex));
  penlabels(range 1 thru 10);
enddef;

beginchr("teema1luuva",1.1ten);
  draw_luuva(1,leftside,open,tex,ypart conpoint3);
endchr;
beginchr("teema1luuva_conr",1.1ten);
  draw_luuva(1,leftside,conright,tex,ypart conpoint3);
endchr;
beginchr("teema1luuvar",1.9ten);
  draw_luuva(2,leftside,open,tex,ypart conpoint3);
endchr;
beginchr("teema1luuvar_conr",1.9ten);
  draw_luuva(2,leftside,conright,tex,ypart conpoint3);
endchr;
beginchr("teema2luuva",1.0ten);
  draw_luuva(1,leftside,closed,tex,ypart conpoint3);
endchr;
beginchr("teema2luuvar",1.8ten);
  draw_luuva(2,leftside,closed,tex,ypart conpoint3);
endchr;
beginchr("teema3luuva",1.1ten);
  draw_luuva(1,rightside,open,tex,ypart conpoint5);
endchr;
beginchr("teema3luuvar",1.9ten);
  draw_luuva(2,rightside,open,tex,ypart conpoint5);
endchr;
beginchr("teema4luuva",1.0ten);
  draw_luuva(1,rightside,closed,tex,ypart conpoint5);
endchr;
beginchr("teema4luuvar",1.8ten);
  draw_luuva(2,rightside,closed,tex,ypart conpoint5);
endchr;

beginchr("capteema1luuva",1.1cten);
  draw_luuva(1,leftside,open,ctex,ypart conpoint8);
endchr;
beginchr("capteema1luuvar",1.9cten);
  draw_luuva(2,leftside,open,ctex,ypart conpoint8);
endchr;
beginchr("capteema2luuva",1.0cten);
  draw_luuva(1,leftside,closed,ctex,ypart conpoint8);
endchr;
beginchr("capteema2luuvar",1.8cten);
  draw_luuva(2,leftside,closed,ctex,ypart conpoint8);
endchr;
beginchr("capteema3luuva",1.1cten);
  draw_luuva(1,rightside,open,ctex,ypart conpoint9);
endchr;
beginchr("capteema3luuvar",1.9cten);
  draw_luuva(2,rightside,open,ctex,ypart conpoint9);
endchr;
beginchr("capteema4luuva",1.0cten);
  draw_luuva(1,rightside,closed,ctex,ypart conpoint9);
endchr;
beginchr("capteema4luuvar",1.8cten);
  draw_luuva(2,rightside,closed,ctex,ypart conpoint9);
endchr;

forgd:=true;

def build_tteematengwa(expr s, t, l, uap, dap) =
  beginrefchr(s,xpart(apt(t,"lluuvap").pt-apt(l,"lluuvap").pt)+psc(l).width);
    attach(t,"origo","origo");
    attach(l,"lluuvap","lluuvap");
    setap("uap",apt(ps.n,uap).pt);
    setap("dap",apt(ps.n,dap).pt);
  endchr;
enddef;
def build_pteematengwa(expr s, t, f, l, uap, dap) =
  beginrefchr(s,xpart(apt(t,"lbarap").pt-apt(f,"lbarap").pt)+psc(f).width);
    attach(t,"origo","origo");
    attach(f,"lbarap","lbarap");
    attach(l,"lluuvap","lluuvap");
    setap("uap",apt(ps.n,uap).pt);
    setap("dap",apt(ps.n,dap).pt);
  endchr;
enddef;
def build_cteematengwa(expr s, l, t, uap, dap) =
  beginrefchr(s,xpart(apt(l,"rluuvap").pt-apt(t,"rluuvap").pt)+psc(t).width);
    attach(l,"origo","origo");
    attach(t,"rluuvap","rluuvap");
    setap("uap",apt(ps.n,uap).pt);
    setap("dap",apt(ps.n,dap).pt);
  endchr;
enddef;
def build_qteematengwa(expr s, f, t, l, uap, dap) =
  beginrefchr(s,psc(f).width);
    attach(f,"origo","origo");
    attach(t,"rbarap","rbarap");
    attach(l,"rluuvap","rluuvap");
    setap("uap",apt(ps.n,uap).pt);
    setap("dap",apt(ps.n,dap).pt);
  endchr;
enddef;
def build_qteematengwab(expr s, f, t, l, uap, dap) =
  beginrefchr(s,xpart(apt(f,"rbarap").pt-apt(t,"rbarap").pt)+psc(t).width);
    attach(f,"origo","origo");
    attach(t,"rbarap","rbarap");
    attach(l,"rluuvap","rluuvap");
    setap("uap",apt(ps.n,uap).pt);
    setap("dap",apt(ps.n,dap).pt);
  endchr;
enddef;

build_tteematengwa(tinco,"telco_leftdown","teema1luuva","luuvaluap","luuvardap");
build_tteematengwa(tinco&".conr","telco_leftdown","teema1luuva_conr","luuvaluap","luuvardap");
build_tteematengwa(tinco&".conl","telco_leftdown_conl","teema1luuva","luuvaluap","luuvardap");
build_tteematengwa(tinco&".conb","telco_leftdown_conl","teema1luuva_conr","luuvaluap","luuvardap");
build_tteematengwa(tinco&".dec","captelco_leftdown","capteema1luuva","luuvaluap","luuvardap");

build_tteematengwa(ando,"telco_leftdown","teema1luuvar","luuvaluap","luuvardap");
build_tteematengwa(ando&".conr","telco_leftdown","teema1luuvar_conr","luuvaluap","luuvardap");
build_tteematengwa(ando&".conl","telco_leftdown_conl","teema1luuvar","luuvaluap","luuvardap");
build_tteematengwa(ando&".conb","telco_leftdown_conl","teema1luuvar_conr","luuvaluap","luuvardap");
build_tteematengwa(ando&".dec","captelco_leftdown","capteema1luuvar","luuvaluap","luuvardap");

build_tteematengwa(thuule,"telco_leftup","teema1luuva","luuvaruap","luuvaldap");
build_tteematengwa(thuule&".conr","telco_leftup","teema1luuva_conr","luuvaruap","luuvaldap");
build_tteematengwa(thuule&".dec","captelco_leftup","capteema1luuva","luuvaruap","luuvaldap");

build_tteematengwa(anto,"telco_leftup","teema1luuvar","luuvaruap","luuvaldap");
build_tteematengwa(anto&".conr","telco_leftup","teema1luuvar_conr","luuvaruap","luuvaldap");
build_tteematengwa(anto&".dec","captelco_leftup","capteema1luuvar","luuvaruap","luuvaldap");

build_tteematengwa(oore,"telco_leftshort","teema1luuva","luuvaluap","luuvaldap");
build_tteematengwa(oore&".conr","telco_leftshort","teema1luuva_conr","luuvaluap","luuvaldap");
build_tteematengwa(oore&".conl","telco_leftshort_conl","teema1luuva","luuvaluap","luuvaldap");
build_tteematengwa(oore&".conb","telco_leftshort_conl","teema1luuva_conr","luuvaluap","luuvaldap");
build_tteematengwa(oore&".dec","captelco_leftshort","capteema1luuva","luuvaluap","luuvaldap");

build_tteematengwa(nuumen,"telco_leftshort","teema1luuvar","luuvaluap","luuvaldap");
build_tteematengwa(nuumen&".conr","telco_leftshort","teema1luuvar_conr","luuvaluap","luuvaldap");
build_tteematengwa(nuumen&".conl","telco_leftshort_conl","teema1luuvar","luuvaluap","luuvaldap");
build_tteematengwa(nuumen&".conb","telco_leftshort_conl","teema1luuvar_conr","luuvaluap","luuvaldap");
build_tteematengwa(nuumen&".dec","captelco_leftshort","capteema1luuvar","luuvaluap","luuvaldap");

build_tteematengwa(extthuule,"telco_leftext","teema1luuva","luuvaruap","luuvardap");
build_tteematengwa(extthuule&".conr","telco_leftext","teema1luuva_conr","luuvaruap","luuvardap");
build_tteematengwa(extthuule&".dec","captelco_leftext","capteema1luuva","luuvaruap","luuvardap");

build_tteematengwa(extanto,"telco_leftext","teema1luuvar","luuvaruap","luuvardap");
build_tteematengwa(extanto&".conr","telco_leftext","teema1luuvar_conr","luuvaruap","luuvardap");
build_tteematengwa(extanto&".dec","captelco_leftext","capteema1luuvar","luuvaruap","luuvardap");

build_pteematengwa(parma,"telco_leftdown","closingbar_low1","teema2luuva","luuvaluap","luuvardap");
build_pteematengwa(parma&".conr","telco_leftdown","closingbar_low1_conr","teema2luuva","luuvaluap","luuvardap");
build_pteematengwa(parma&".conl","telco_leftdown_conl","closingbar_low1","teema2luuva","luuvaluap","luuvardap");
build_pteematengwa(parma&".conb","telco_leftdown_conl","closingbar_low1_conr","teema2luuva","luuvaluap","luuvardap");
build_pteematengwa(parma&".dec","captelco_leftdown","capclosingbar_low1","capteema2luuva","luuvaluap","luuvardap");

build_pteematengwa(umbar,"telco_leftdown","closingbar_low3","teema2luuvar","luuvaluap","luuvardap");
build_pteematengwa(umbar&".conr","telco_leftdown","closingbar_low3_conr","teema2luuvar","luuvaluap","luuvardap");
build_pteematengwa(umbar&".conl","telco_leftdown_conl","closingbar_low3","teema2luuvar","luuvaluap","luuvardap");
build_pteematengwa(umbar&".conb","telco_leftdown_conl","closingbar_low3_conr","teema2luuvar","luuvaluap","luuvardap");
build_pteematengwa(umbar&".dec","captelco_leftdown","capclosingbar_low3","capteema2luuvar","luuvaluap","luuvardap");

build_pteematengwa(formen,"telco_leftup","closingbar_low2","teema2luuva","luuvaruap","luuvaldap");
build_pteematengwa(formen&".conr","telco_leftup","closingbar_low2_conr","teema2luuva","luuvaruap","luuvaldap");
build_pteematengwa(formen&".dec","captelco_leftup2","capclosingbar_low2","capteema2luuva","luuvaruap","luuvaldap");

build_pteematengwa(ampa,"telco_leftup","closingbar_low4","teema2luuvar","luuvaruap","luuvaldap");
build_pteematengwa(ampa&".conr","telco_leftup","closingbar_low4_conr","teema2luuvar","luuvaruap","luuvaldap");
build_pteematengwa(ampa&".dec","captelco_leftup2","capclosingbar_low4","capteema2luuvar","luuvaruap","luuvaldap");

build_pteematengwa(vala,"telco_leftshort","closingbar_low2","teema2luuva","luuvaluap","luuvaldap");
build_pteematengwa(vala&".conr","telco_leftshort","closingbar_low2_conr","teema2luuva","luuvaluap","luuvaldap");
build_pteematengwa(vala&".conl","telco_leftshort_conl","closingbar_low2","teema2luuva","luuvaluap","luuvaldap");
build_pteematengwa(vala&".conb","telco_leftshort_conl","closingbar_low2_conr","teema2luuva","luuvaluap","luuvaldap");
build_pteematengwa(vala&".dec","captelco_leftshort2","capclosingbar_low2","capteema2luuva","luuvaluap","luuvaldap");

build_pteematengwa(malta,"telco_leftshort","closingbar_low4","teema2luuvar","luuvaluap","luuvaldap");
build_pteematengwa(malta&".conr","telco_leftshort","closingbar_low4_conr","teema2luuvar","luuvaluap","luuvaldap");
build_pteematengwa(malta&".conl","telco_leftshort_conl","closingbar_low4","teema2luuvar","luuvaluap","luuvaldap");
build_pteematengwa(malta&".conb","telco_leftshort_conl","closingbar_low4_conr","teema2luuvar","luuvaluap","luuvaldap");
build_pteematengwa(malta&".dec","captelco_leftshort2","capclosingbar_low4","capteema2luuvar","luuvaluap","luuvaldap");

build_pteematengwa(extformen,"telco_leftext","closingbar_low1","teema2luuva","luuvaruap","luuvardap");
build_pteematengwa(extformen&".conr","telco_leftext","closingbar_low1_conr","teema2luuva","luuvaruap","luuvardap");
build_pteematengwa(extformen&".dec","captelco_leftext","capclosingbar_low1","capteema2luuva","luuvaruap","luuvardap");

build_pteematengwa(extampa,"telco_leftext","closingbar_low3","teema2luuvar","luuvaruap","luuvardap");
build_pteematengwa(extampa&".conr","telco_leftext","closingbar_low3_conr","teema2luuvar","luuvaruap","luuvardap");
build_pteematengwa(extampa&".dec","captelco_leftext","capclosingbar_low3","capteema2luuvar","luuvaruap","luuvardap");

build_cteematengwa(calma,"teema3luuva","telco_rightdown","luuvaruap","luuvaldap");
build_cteematengwa(calma&".conr","teema3luuva","telco_rightdown_conr","luuvaruap","luuvaldap");
build_cteematengwa(calma&".dec","capteema3luuva","captelco_rightdown1","luuvaruap","luuvaldap");

build_cteematengwa(anga,"teema3luuvar","telco_rightdown","luuvaruap","luuvaldap");
build_cteematengwa(anga&".conr","teema3luuvar","telco_rightdown_conr","luuvaruap","luuvaldap");
build_cteematengwa(anga&".dec","capteema3luuvar","captelco_rightdown1","luuvaruap","luuvaldap");

build_cteematengwa(harma,"teema3luuva","telco_rightup","luuvaluap","luuvardap");
build_cteematengwa(harma&".conr","teema3luuva","telco_rightup_conr","luuvaluap","luuvardap");
build_cteematengwa(harma&".dec","capteema3luuva","captelco_rightup","luuvaluap","luuvardap");

build_cteematengwa(anca,"teema3luuvar","telco_rightup","luuvaluap","luuvardap");
build_cteematengwa(anca&".conr","teema3luuvar","telco_rightup_conr","luuvaluap","luuvardap");
build_cteematengwa(anca&".dec","capteema3luuvar","captelco_rightup","luuvaluap","luuvardap");

build_cteematengwa(anna,"teema3luuva","telco_rightshort","luuvaruap","luuvardap");
build_cteematengwa(anna&".conr","teema3luuva","telco_rightshort_conr","luuvaruap","luuvardap");
build_cteematengwa(anna&".dec","capteema3luuva","captelco_rightshort1","luuvaruap","luuvardap");
build_cteematengwa(anna&".conrbot","teema3luuva","telco_rightshort_conrbot","luuvaruap","luuvardap");

build_cteematengwa(noldo,"teema3luuvar","telco_rightshort","luuvaruap","luuvardap");
build_cteematengwa(noldo&".conr","teema3luuvar","telco_rightshort_conr","luuvaruap","luuvardap");
build_cteematengwa(noldo&".dec","capteema3luuvar","captelco_rightshort1","luuvaruap","luuvardap");
build_cteematengwa(noldo&".conrbot","teema3luuvar","telco_rightshort_conrbot","luuvaruap","luuvardap");

build_cteematengwa(extharma,"teema3luuva","telco_rightext","luuvaluap","luuvaldap");
build_cteematengwa(extharma&".dec","capteema3luuva","captelco_rightext","luuvaluap","luuvaldap");

build_cteematengwa(extanca,"teema3luuvar","telco_rightext","luuvaluap","luuvaldap");
build_cteematengwa(extanca&".dec","capteema3luuvar","captelco_rightext","luuvaluap","luuvaldap");

build_qteematengwa(quesse,"closingbar_high2","telco_rightdown2","teema4luuva","luuvaruap","luuvaldap");
build_qteematengwa(quesse&".conl","closingbar_high2_conl","telco_rightdown2","teema4luuva","luuvaruap","luuvaldap");
build_qteematengwa(quesse&".conr","closingbar_high2_conr","telco_rightdown2","teema4luuva","luuvaruap","luuvaldap");
build_qteematengwa(quesse&".conb","closingbar_high2_conb","telco_rightdown2","teema4luuva","luuvaruap","luuvaldap");
build_qteematengwa(quesse&".dec","capclosingbar_high2","captelco_rightdown2","capteema4luuva","luuvaruap","luuvaldap");

build_qteematengwa(ungwe,"closingbar_high4","telco_rightdown2","teema4luuvar","luuvaruap","luuvaldap");
build_qteematengwa(ungwe&".conl","closingbar_high4_conl","telco_rightdown2","teema4luuvar","luuvaruap","luuvaldap");
build_qteematengwa(ungwe&".conr","closingbar_high4_conr","telco_rightdown2","teema4luuvar","luuvaruap","luuvaldap");
build_qteematengwa(ungwe&".conb","closingbar_high4_conb","telco_rightdown2","teema4luuvar","luuvaruap","luuvaldap");
build_qteematengwa(ungwe&".dec","capclosingbar_high4","captelco_rightdown2","capteema4luuvar","luuvaruap","luuvaldap");

build_qteematengwab(hwesta,"closingbar_high1","telco_rightup","teema4luuva","luuvaluap","luuvardap");
build_qteematengwab(hwesta&".conr","closingbar_high1","telco_rightup_conr","teema4luuva","luuvaluap","luuvardap");
build_qteematengwab(hwesta&".conl","closingbar_high1_conl","telco_rightup","teema4luuva","luuvaluap","luuvardap");
build_qteematengwab(hwesta&".conb","closingbar_high1_conl","telco_rightup_conr","teema4luuva","luuvaluap","luuvardap");
build_qteematengwab(hwesta&".dec","capclosingbar_high1","captelco_rightup","capteema4luuva","luuvaluap","luuvardap");

build_qteematengwab(unque,"closingbar_high3","telco_rightup","teema4luuvar","luuvaluap","luuvardap");
build_qteematengwab(unque&".conr","closingbar_high3","telco_rightup_conr","teema4luuvar","luuvaluap","luuvardap");
build_qteematengwab(unque&".conl","closingbar_high3_conl","telco_rightup","teema4luuvar","luuvaluap","luuvardap");
build_qteematengwab(unque&".conb","closingbar_high3_conl","telco_rightup_conr","teema4luuvar","luuvaluap","luuvardap");
build_qteematengwab(unque&".dec","capclosingbar_high3","captelco_rightup","capteema4luuvar","luuvaluap","luuvardap");

build_qteematengwa(vilya,"closingbar_high2","telco_rightshort2","teema4luuva","luuvaruap","luuvardap");
build_qteematengwa(vilya&".conl","closingbar_high2_conl","telco_rightshort2","teema4luuva","luuvaruap","luuvardap");
build_qteematengwa(vilya&".conr","closingbar_high2_conr","telco_rightshort2","teema4luuva","luuvaruap","luuvardap");
build_qteematengwa(vilya&".conb","closingbar_high2_conb","telco_rightshort2","teema4luuva","luuvaruap","luuvardap");
build_qteematengwa(vilya&".dec","capclosingbar_high2","captelco_rightshort2","capteema4luuva","luuvaruap","luuvardap");
build_qteematengwa(vilya&".conrbot","closingbar_high2","telco_rightshort2_conrbot","teema4luuva","luuvaruap","luuvardap");
build_qteematengwa(vilya&".conbbot","closingbar_high2_conl","telco_rightshort2_conrbot","teema4luuva","luuvaruap","luuvardap");

build_qteematengwa(nwalme,"closingbar_high4","telco_rightshort2","teema4luuvar","luuvaruap","luuvardap");
build_qteematengwa(nwalme&".conl","closingbar_high4_conl","telco_rightshort2","teema4luuvar","luuvaruap","luuvardap");
build_qteematengwa(nwalme&".conr","closingbar_high4_conr","telco_rightshort2","teema4luuvar","luuvaruap","luuvardap");
build_qteematengwa(nwalme&".conb","closingbar_high4_conb","telco_rightshort2","teema4luuvar","luuvaruap","luuvardap");
build_qteematengwa(nwalme&".dec","capclosingbar_high4","captelco_rightshort2","capteema4luuvar","luuvaruap","luuvardap");
build_qteematengwa(nwalme&".conrbot","closingbar_high4","telco_rightshort2_conrbot","teema4luuvar","luuvaruap","luuvardap");
build_qteematengwa(nwalme&".conbbot","closingbar_high4_conl","telco_rightshort2_conrbot","teema4luuvar","luuvaruap","luuvardap");

build_qteematengwab(exthwesta,"closingbar_high1","telco_rightext","teema4luuva","luuvaluap","luuvaldap");
build_qteematengwab(exthwesta&".conl","closingbar_high1_conl","telco_rightext","teema4luuva","luuvaluap","luuvaldap");
build_qteematengwab(exthwesta&".dec","capclosingbar_high1","captelco_rightext","capteema4luuva","luuvaluap","luuvaldap");

build_qteematengwab(extunque,"closingbar_high3","telco_rightext","teema4luuvar","luuvaluap","luuvaldap");
build_qteematengwab(extunque&".conl","closingbar_high3_conl","telco_rightext","teema4luuvar","luuvaluap","luuvaldap");
build_qteematengwab(extunque&".dec","capclosingbar_high3","captelco_rightext","capteema4luuvar","luuvaluap","luuvaldap");

%beginrefchr(longcarr,psc("telco_leftdown").width);
%  padding(0.1pt,0.0pt);
%  attach("telco_leftdown","lpad","origo");
%  setap("uap",(0.41[lpad,w-rpad],tex+apy));
%  setap("dap",(0.45[lpad,w-rpad],-tdesc-apy));
%endchr;
%beginrefchr(longcarr&".conl",psc("telco_leftdown_conl").width);
%  padding(0.0pt,0.0pt);
%  attach("telco_leftdown_conl","lpad","origo");
%  setap("uap",(0.41[lpad,w-rpad],tex+apy));
%  setap("dap",(0.45[lpad,w-rpad],-tdesc-apy));
%endchr;
beginrefchr(longcarr&".dec",psc("captelco_leftdown").width);
  padding(0.1pt,0.0pt);
  attach("captelco_leftdown","lpad","origo");
  setap("uap",(0.48[lpad,w-rpad],ctex+apy));
  setap("dap",(0.48[lpad,w-rpad],-ctdesc-apy));
endchr;
%
%beginrefchr(halla,psc("telco_leftup").width);
%  padding(0.1pt,0.0pt);
%  attach("telco_leftup","lpad","origo");
%  setap("uap",(0.41[lpad,w-rpad],tasc+apy));
%  setap("dap",(0.45[lpad,w-rpad],-apy));
%endchr;
beginrefchr(halla&".dec",psc("captelco_leftup").width);
  padding(0.1pt,0.0pt);
  attach("captelco_leftup","lpad","origo");
  setap("uap",(0.48[lpad,w-rpad],ctasc+apy));
  setap("dap",(0.5[lpad,w-rpad],-1.0pt));
endchr;
%
%beginrefchr(shortcarr,psc("telco_leftshort").width);
%  padding(0.1pt,0.1pt);
%  attach("telco_leftshort","lpad","origo");
%  setap("uap",(0.41[lpad,w-rpad],tex+apy));
%  setap("dap",(0.41[lpad,w-rpad],-apy));
%endchr;
%beginrefchr(shortcarr&".conl",psc("telco_leftshort_conl").width);
%  padding(0.0pt,0.1pt);
%  attach("telco_leftshort_conl","lpad","origo");
%  setap("uap",(0.41[lpad,w-rpad],tex+apy));
%  setap("dap",(0.41[lpad,w-rpad],-apy));
%endchr;
%beginrefchr(shortcarr&".conr",psc("telco_leftshort_conr").width);
%  padding(0.1pt,0.pt);
%  attach("telco_leftshort_conr","lpad","origo");
%  setap("uap",(0.41[lpad,w-rpad],tex+apy));
%  setap("dap",(0.41[lpad,w-rpad],-apy));
%endchr;
%beginrefchr(shortcarr&".conb",psc("telco_leftshort_conb").width);
%  padding(0.0pt,0.0pt);
%  attach("telco_leftshort_conb","lpad","origo");
%  setap("uap",(0.41[lpad,w-rpad],tex+apy));
%  setap("dap",(0.41[lpad,w-rpad],-apy));
%endchr;
beginrefchr(shortcarr&".dec",psc("captelco_leftshort").width);
  padding(0.1pt,0.0pt);
  attach("captelco_leftshort","lpad","origo");
  setap("uap",(0.48[lpad,w-rpad],ctex+apy));
  setap("dap",(0.5[lpad,w-rpad],-1.0pt));
endchr;


%beginrefchr(ichtligature,xpart(apt("teema3luuva","rluuvap").pt
%                             +apt("telco_rightext","lluuvap").pt
%                             -apt("telco_rightext","rluuvap").pt
%                             -apt("teema1luuva","lluuvap").pt)+psc("teema1luuva").width);
%  attach("teema3luuva","origo","origo");
%  attach("telco_rightext","rluuvap","rluuvap");
%  attach("teema1luuva","lluuvap","lluuvap");
%endchr;
%beginrefchr(achtligature,xpart(apt("closingbar_high1","rbarap").pt
%                             +apt("telco_rightext","lluuvap").pt
%                             -apt("telco_rightext","rbarap").pt
%                             -apt("teema1luuva","lluuvap").pt)+psc("teema1luuva").width);
%  attach("closingbar_high1","origo","origo");
%  attach("telco_rightext","rbarap","rbarap");
%  attach("teema4luuva","rluuvap","rluuvap");
%  attach("teema1luuva","lluuvap","lluuvap");
%endchr;
beginrefchr(tinco&".lig",psc("teema1luuva").width
                     -psc("telco_rightext").width
                     +xpart(apt("telco_rightext","lluuvap").pt
                           -apt("teema1luuva","lluuvap").pt));
  setap("lluuvap",apt("telco_rightext","lluuvap").pt-(psc("telco_rightext").width,0));
  attach("teema1luuva","lluuvap","lluuvap");
  setap("uap",apt(ps.n,"luuvaruap").pt);
  setap("dap",apt(ps.n,"luuvardap").pt);
endchr;
pause;

def build_tengwa(expr s, t, f, l) =
  beginrefchr(s,xpart(apt(t,"lbarap").pt-apt(f,"lbarap").pt)+psc(f).width);
    attach(t,"origo","origo");
    attach(f,"lbarap","lbarap");
    attach(l,"lluuvap","lluuvap");
enddef;

build_tengwa(mhtengwa,"telco_leftshort","closingbar_low4_desc","teema2luuvar");
  setap("uap",apt(ps.n,"luuvaluap").pt);
  setap("dap",(0.54w,-apy));
endchr;
build_tengwa(mhtengwa&".dec","captelco_leftshort2","closingbar_low4_desc","capteema2luuvar");
  setap("uap",apt(ps.n,"luuvaluap").pt);
  setap("dap",(0.54w,-apy));
endchr;

build_tengwa(beleriandicmh,"telco_leftshort","closingbar_low2_desc","teema2luuva");
  setap("uap",apt(ps.n,"luuvaluap").pt);
  setap("dap",(0.54w,-apy));
endchr;
build_tengwa(beleriandicmh&".dec","captelco_leftshort2","closingbar_low2_desc","capteema2luuva");
  setap("uap",apt(ps.n,"luuvaluap").pt);
  setap("dap",(0.6w,-apy));
endchr;

def draw_openanna(expr style) =
  padding(0.9pt,if style=capital: psc("captelco_rightshort1").width-xpart(apt("captelco_rightshort1","rluuvap").pt) else: 1pt fi);
  numeric hgt;
  if style=capital: hgt=ctex; else: hgt=tex; fi
  a2=33; a4=35; a5=45;
  z1=(lpad+0.2pt,hgt);
  z2=(x1,y3);
  z3=(lpad,0.42hgt);
  use(a4); bot z4=(0.63[x5,x3],0);
  setap("rt",(w,0));
  apt(ps.n,lastap).forgd := false;
  if style=capital:
    attach("captelco_rightshort1","rt","right");
  else:
    attach("telco_rightshort","rt","right");
  fi
  z5=apt(ps.n,"rluuvap").pt;
  if style=conleft:
    a0=conpenangle7+1; a1=34;
    ap0=ang(a0..a1);
    p0=topserif(1,2)(0.6pt, 0.5tex, 0, 0, ap0);
    z0=point 0 of p0;
    draw_connection(7,0,true);
  else:
    a0=38; a1=34;
    ap0=ang(a0..a1);
    p0=topserif(1,2)(0.7pt, 0.5tex, 25, 0, ap0);
  fi
  draw_stroke(subpath(0,0.5) of p0..z3{down}..z4{right}..{curl0.3}z5,ang(subpath(0,0.5) of ap0..a2..a4..a5));
  labels(range 1 thru 7);
  setap("uap",(1/2[x1,x5],hgt+apy));
  setap("cap",(1/2[x3,x5],1/2tex));
  setap("dap",(0.49w,-apy));
enddef;
beginchr(openanna,0.9ten);
  draw_openanna(normal);
endchr;
beginchr(openanna&".conl",0.9ten);
  draw_openanna(conleft);
endchr;
beginchr(openanna&".dec",0.9cten);
  draw_openanna(capital);
endchr;

beginchr(silme&".lig_harma",1ten);
  a1=harmaligappenangle;
  a2=a3=a4=a5-5=35;
  use(a1);
  padding(0.8pt,-0.757pt); %825
  z1=(w,0)+apt(harma,"harmaligap").pt;
%  z1=(235.66052,226.45653);
  use(a4); bot z4=(0.45[x3,x5],-o);
  z5=(w-rpad,0.60tex);
  ap1=ang(a1..a2--a3..a4..a5);
  y2=0.75[y3,y1];
  x2=0.45[x3,x1];
  z3=(lpad,0.45[0,tex]);
  p1=z1{left}..z2..tension1.2..z3{down}..z4{right}..tension 1.3..z5{up};
  setap("uap",(0.5[x2,x5],tex+0.0pt));
  setap("dap",(x4,-apy));
  draw_stroke(subpath(0,4) of p1,subpath(0,4) of ap1);
  penlabels(range 1 thru 5);
endchr;

beginchr(tengparen,0);
  draw_declefttelco(0.7[tex,tasc],-1/2tdesc,-1/2tdesc+1.0pt,0.8pt);
endchr;

message"";

